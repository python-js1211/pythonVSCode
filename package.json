{
    "name": "python",
    "displayName": "Python",
    "description": "Python debugging, linting, auto complete, code formatting, sorting imports, go to definition, peek definition, signature view, rename symbol, etc",
    "version": "0.0.4",
    "publisher": "donjayamanne",
    "license": "SEE LICENSE IN LICENSE or README.MD",
    "homepage": "https://github.com/DonJayamanne/pythonVSCode/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/DonJayamanne/pythonVSCode"
    },
    "bugs": {
        "url": "https://github.com/DonJayamanne/pythonVSCode/issues"
    },
    "icon": "images/icon.png",
    "galleryBanner": {
        "color": "#0000FF",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^0.10.1"
    },
    "categories": [
        "Languages",
        "Debuggers",
        "Linters",
        "Snippets",
        "Other"
    ],
    "activationEvents": [
        "onLanguage:python",
        "onCommand:python.sortImports"
    ],
    "main": "./out/client/extension",
    "contributes": {
        "snippets": [
            {
                "language": "python",
                "path": "./snippets/python.json"
            }
        ],
        "commands": [
            {
                "command": "python.sortImports",
                "title": "Python: Sort Imports"
            }
        ],
        "debuggers": [
            {
                "type": "python",
                "label": "Python",
                "enableBreakpointsFor": {
                    "languageIds": [
                        "python"
                    ]
                },
                "program": "./out/client/debugger/main.js",
                "runtime": "node",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "program"
                        ],
                        "properties": {
                            "program": {
                                "type": "string",
                                "description": "Workspace relative path to a text file.",
                                "default": "__init__.py"
                            },
                            "stopOnEntry": {
                                "type": "boolean",
                                "description": "Automatically stop after launch.",
                                "default": true
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "name": "Python",
                        "type": "python",
                        "request": "launch",
                        "program": "__init__.py",
                        "stopOnEntry": true
                    }
                ]
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Python Configuration",
            "properties": {
                "python.linting.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to lint Python files."
                },
                "python.linting.pylintEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to lint Python files using pylint."
                },
                "python.linting.pep8Enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to lint Python files using pep8"
                },
                "python.linting.lintOnTextChange": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to lint Python files when modified."
                },
                "python.linting.lintOnSave": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to lint Python files when saved."
                },
                "python.linting.maxNumberOfProblems": {
                    "type": "number",
                    "default": 100,
                    "description": "Controls the maximum number of problems produced by the server."
                },
                "python.linting.pylintCategorySeverity.convention": {
                    "type": "string",
                    "default": "Hint",
                    "description": "Severity of Pylint message type 'Convention/C'. Possible values include Error, Hint, Warning and Information."
                },
                "python.linting.pylintCategorySeverity.refactor": {
                    "type": "string",
                    "default": "Hint",
                    "description": "Severity of Pylint message type 'Refactor/R'. Possible values include Error, Hint, Warning and Information."
                },
                "python.linting.pylintCategorySeverity.warning": {
                    "type": "string",
                    "default": "Warning",
                    "description": "Severity of Pylint message type 'Warning/W'. Possible values include Error, Hint, Warning and Information."
                },
                "python.linting.pylintCategorySeverity.error": {
                    "type": "string",
                    "default": "Error",
                    "description": "Severity of Pylint message type 'Error/E'. Possible values include Error, Hint, Warning and Information."
                },
                "python.linting.pylintCategorySeverity.fatal": {
                    "type": "string",
                    "default": "Error",
                    "description": "Severity of Pylint message type 'Fatal/F'. Possible values include Error, Hint, Warning and Information."
                },
                "python.linting.pylintPath": {
                    "type": "string",
                    "default": "pylint",
                    "description": "Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path."
                },
                "python.linting.pep8Path": {
                    "type": "string",
                    "default": "pep8",
                    "description": "Path to pep8, you can use a custom version of pep8 by modifying this setting to include the full path."
                },
                "python.formatting.provider": {
                    "type": "string",
                    "default": "autopep8",
                    "description": "Provider for formatting. Possible options include 'autopep8' and 'yapf'."
                },
                "python.formatting.autopep8Path": {
                    "type": "string",
                    "default": "autopep8",
                    "description": "Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path."
                },
                "python.formatting.yapfPath": {
                    "type": "string",
                    "default": "",
                    "description": "Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "node ./node_modules/vscode/bin/compile",
        "compile": "node ./node_modules/vscode/bin/compile  -watch -p ./ && installServerIntoExtension ./out ./src/server/package.json ./src/server/tsconfig.json"
    },
    "dependencies": {
        "named-js-regexp": "^1.3.1",
        "tmp": "0.0.28",
        "vscode-debugadapter": "^1.0.1",
        "vscode-debugprotocol": "^1.0.1",
        "vscode-languageclient": "^1.1.0",
        "vscode-languageserver": "^1.1.0"
    },
    "devDependencies": {
        "typescript": "^1.6.2",
        "vscode": "0.10.x"
    }
}