language: python
cache:
    pip: true
    directories:
        - $HOME/.npm
        - node_modules
git:
    depth: 20

matrix:
    include:
        - os: linux
          python: "2.7"
          env: UNIT_TEST=true
        - os: linux
          python: "2.7"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "2.7"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "2.7"
          env: MULTIROOT_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "3.6-dev"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: MULTIROOT_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: PERFORMANCE_TEST=true
        - os: linux
          python: "3.7-dev"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "3.7-dev"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "3.7-dev"
          env: MULTIROOT_WORKSPACE_TEST=true
        - os: linux
          python: "3.7-dev"
          env: BUNDLE=true
        - os: linux
          python: "3.7-dev"
          env: FUNCTIONAL_TEST=true
before_install: |
  if [ $TRAVIS_OS_NAME == "linux" ]; then
    export CXX="g++-4.9" CC="gcc-4.9" DISPLAY=:99.0;
    sh -e /etc/init.d/xvfb start;
    sleep 3;
  fi
  git clone https://github.com/creationix/nvm.git ./.nvm
  source ./.nvm/nvm.sh
  nvm install 8.9.1
  nvm use 8.9.1
  npm install npm@latest -g
  npm install -g vsce
  export CI_PYTHON_PATH=`which python`
install:
  - travis_wait 5 npm ci
  - npm run clean
  - npx gulp prePublishNonBundle
  - python -m pip install --upgrade 'pip<19'
  - python -m pip install --upgrade -r ./build/test-requirements.txt
  - npx gulp installPythonLibs

script:
  - if [ $UNIT_TEST == "true" ]; then
        npx gulp hygiene-modified;
        npm run cover:enable;
        npm run test:unittests:cover;
    fi
  - if [ $DEBUGGER_TEST_RELEASE == "true" ]; then
        npm run cover:enable;
        npm run testDebugger --silent;
    fi
  - npm run debugger-coverage
  - if [ $FUNCTIONAL_TEST == "true" ]; then
        python -m pip install --upgrade -r ./build/functional-test-requirements.txt;
        npm run test:functional:cover;
    fi
  - if [ $SINGLE_WORKSPACE_TEST == "true" ]; then
        npm run cover:enable;
        npm run testSingleWorkspace --silent;
    fi
  - if [ $MULTIROOT_WORKSPACE_TEST == "true" ]; then
        npm run cover:enable;
        npm run testMultiWorkspace --silent;
    fi
  - if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" && "$PERFORMANCE_TEST" == "true" ]]; then
        npm run testPerformance --silent;
    fi
  - if [ "$TRAVIS_PYTHON_VERSION" == "3.7" ]; then
        python3 -m pip install --upgrade -r news/requirements.txt;
        python3 news/announce.py --dry_run;
        python3 -m pip install --upgrade -r tpn/requirements.txt;
        python3 tpn --npm package-lock.json --config tpn/distribution.toml /dev/null;
    fi
  - if [[ $BUNDLE == "true" && $AZURE_STORAGE_ACCOUNT && "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]]; then
        npm run clean;
        npm run updateBuildNumber -- --buildNumber $TRAVIS_BUILD_NUMBER
        npm run package;
        npx gulp clean:cleanExceptTests;
        npm run testSmoke;
        npm install -g azure-cli;
        azure storage blob upload python*.vsix $AZURE_STORAGE_CONTAINER ms-python-insiders.vsix --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_ACCESS_KEY --quiet;
    fi
  - if [[ $BUNDLE == "true" && $AZURE_STORAGE_ACCOUNT && "$TRAVIS_BRANCH" == release* && "$TRAVIS_PULL_REQUEST" == "false" ]]; then
        npm run clean;
        npm run updateBuildNumber -- --buildNumber $TRAVIS_BUILD_NUMBER --updateChangelog
        npm run package;
        npx gulp clean:cleanExceptTests;
        npm run testSmoke;
        npm install -g azure-cli;
        azure storage blob upload python*.vsix $AZURE_STORAGE_CONTAINER ms-python-$TRAVIS_BRANCH.vsix --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_ACCESS_KEY --quiet;
    fi
  - bash <(curl -s https://codecov.io/bash)
