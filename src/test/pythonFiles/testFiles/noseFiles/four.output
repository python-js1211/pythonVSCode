nose.config: INFO: Set working dir to /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x105fd4048>, <nose.plugins.logcapture.LogCapture object at 0x105ebd470>, <nose.plugins.deprecated.Deprecated object at 0x106077a58>, <nose.plugins.skip.Skip object at 0x1060d9828>, <nose.plugins.collect.CollectOnly object at 0x1061a6208>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug=None, debugLog=None, env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[re.compile('^\\.'), re.compile('^_'), re.compile('^setup\\.py$')], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, loggingConfig=None, options=<Values at 0x1061a6cf8: {'version': False, 'showPlugins': False, 'verbosity': 4, 'files': None, 'where': ['specific'], 'py3where': None, 'testMatch': 'tst', 'testNames': None, 'debug': None, 'debugLog': None, 'loggingConfig': None, 'ignoreFiles': [], 'exclude': [], 'include': [], 'stopOnError': False, 'addPaths': True, 'includeExe': False, 'traverseNamespace': False, 'firstPackageWins': False, 'byteCompile': True, 'attr': None, 'eval_attr': None, 'capture': True, 'logcapture': True, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'logcapture_datefmt': None, 'logcapture_filters': None, 'logcapture_clear': False, 'logcapture_level': 'NOTSET', 'enable_plugin_coverage': None, 'cover_packages': None, 'cover_erase': None, 'cover_tests': None, 'cover_min_percentage': None, 'cover_inclusive': None, 'cover_html': None, 'cover_html_dir': 'cover', 'cover_branches': None, 'cover_xml': None, 'cover_xml_file': 'coverage.xml', 'debugBoth': False, 'debugFailures': False, 'debugErrors': False, 'noDeprecated': False, 'enable_plugin_doctest': None, 'doctest_tests': None, 'doctestExtension': None, 'doctest_result_var': None, 'doctestFixtures': None, 'doctestOptions': None, 'enable_plugin_isolation': None, 'detailedErrors': None, 'noSkip': False, 'enable_plugin_id': None, 'testIdFile': '.noseids', 'failed': False, 'multiprocess_workers': 0, 'multiprocess_timeout': 10, 'multiprocess_restartworker': False, 'enable_plugin_xunit': None, 'xunit_file': 'nosetests.xml', 'xunit_testsuite_name': 'nosetests', 'enable_plugin_allmodules': None, 'collect_only': True}>, parser=<optparse.OptionParser object at 0x1054dc4a8>, parserClass=<class 'optparse.OptionParser'>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x1054dc4e0>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, testMatch=re.compile('tst'), testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=4, where=(), worker=False, workingDir='/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific')
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.importer: DEBUG: insert /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific into sys.path
nose.plugins.collect: DEBUG: Preparing test loader
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x1056897f0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['.']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from . (None)
nose.selector: DEBUG: Test name . resolved to file ., module None, call None
nose.selector: DEBUG: Final resolution of test name .: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific module None call None
nose.plugins.collect: DEBUG: TestSuite([<nose.suite.LazySuite tests=generator (4397453944)>])
nose.plugins.collect: DEBUG: Add test <nose.suite.LazySuite tests=generator (4397453944)>
nose.core: DEBUG: runTests called
nose.suite: DEBUG: precache is []
nose.loader: DEBUG: load from dir /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py module tst_unittest_one call None
nose.importer: DEBUG: Import tst_unittest_one from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.importer: DEBUG: find module part tst_unittest_one (tst_unittest_one) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific']
nose.loader: DEBUG: Load from module <module 'tst_unittest_one' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py'>
nose.selector: DEBUG: wantModule <module 'tst_unittest_one' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_one.py'>? True
nose.selector: DEBUG: wantClass <class 'tst_unittest_one.Test_test1'>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test1.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'tst_unittest_one.Test_test1'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'tst_unittest_one.Test_test1'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.tst_A>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test1.tst_B>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x1061bd978>)
nose.plugins.collect: DEBUG: Add test tst_A (tst_unittest_one.Test_test1)
nose.plugins.collect: DEBUG: Add test tst_B (tst_unittest_one.Test_test1)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x1061bd9b0>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<tst_unittest_one.Test_test1 testMethod=tst_A>), Test(<tst_unittest_one.Test_test1 testMethod=tst_B>)]>
nose.plugins.collect: DEBUG: Preparing test case tst_A (tst_unittest_one.Test_test1)
tst_A (tst_unittest_one.Test_test1) ... ok
nose.plugins.collect: DEBUG: Preparing test case tst_B (tst_unittest_one.Test_test1)
tst_B (tst_unittest_one.Test_test1) ... ok
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py module tst_unittest_two call None
nose.importer: DEBUG: Import tst_unittest_two from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific
nose.importer: DEBUG: find module part tst_unittest_two (tst_unittest_two) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific']
nose.loader: DEBUG: Load from module <module 'tst_unittest_two' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py'>
nose.selector: DEBUG: wantModule <module 'tst_unittest_two' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific/tst_unittest_two.py'>? True
nose.selector: DEBUG: wantClass <class 'tst_unittest_two.Tst_test2'>? True
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.id>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.run>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'tst_unittest_two.Tst_test2'>>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'tst_unittest_two.Tst_test2'>>? None
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.tst_A2>? True
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.tst_B2>? True
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.tst_C2>? True
nose.selector: DEBUG: wantMethod <unbound method Tst_test2.tst_D2>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x1061bdfd0>)
nose.plugins.collect: DEBUG: Add test tst_A2 (tst_unittest_two.Tst_test2)
nose.plugins.collect: DEBUG: Add test tst_B2 (tst_unittest_two.Tst_test2)
nose.plugins.collect: DEBUG: Add test tst_C2 (tst_unittest_two.Tst_test2)
nose.plugins.collect: DEBUG: Add test tst_D2 (tst_unittest_two.Tst_test2)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x1061bd518>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<tst_unittest_two.Tst_test2 testMethod=tst_A2>), Test(<tst_unittest_two.Tst_test2 testMethod=tst_B2>), Test(<tst_unittest_two.Tst_test2 testMethod=tst_C2>), Test(<tst_unittest_two.Tst_test2 testMethod=tst_D2>)]>
nose.plugins.collect: DEBUG: Preparing test case tst_A2 (tst_unittest_two.Tst_test2)
tst_A2 (tst_unittest_two.Tst_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case tst_B2 (tst_unittest_two.Tst_test2)
tst_B2 (tst_unittest_two.Tst_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case tst_C2 (tst_unittest_two.Tst_test2)
tst_C2 (tst_unittest_two.Tst_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case tst_D2 (tst_unittest_two.Tst_test2)
tst_D2 (tst_unittest_two.Tst_test2) ... ok
nose.suite: DEBUG: precache is []

----------------------------------------------------------------------
Ran 6 tests in 0.033s

OK
