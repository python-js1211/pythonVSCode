nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x105a14048>, <nose.plugins.logcapture.LogCapture object at 0x1058fb400>, <nose.plugins.deprecated.Deprecated object at 0x105acaf98>, <nose.plugins.skip.Skip object at 0x105b179e8>, <nose.plugins.collect.CollectOnly object at 0x105be4208>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug=None, debugLog=None, env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[re.compile('^\\.'), re.compile('^_'), re.compile('^setup\\.py$')], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, loggingConfig=None, options=<Values at 0x105be4cf8: {'version': False, 'showPlugins': False, 'verbosity': 4, 'files': None, 'where': None, 'py3where': None, 'testMatch': 'test', 'testNames': None, 'debug': None, 'debugLog': None, 'loggingConfig': None, 'ignoreFiles': [], 'exclude': [], 'include': [], 'stopOnError': False, 'addPaths': True, 'includeExe': False, 'traverseNamespace': False, 'firstPackageWins': False, 'byteCompile': True, 'attr': None, 'eval_attr': None, 'capture': True, 'logcapture': True, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'logcapture_datefmt': None, 'logcapture_filters': None, 'logcapture_clear': False, 'logcapture_level': 'NOTSET', 'enable_plugin_coverage': None, 'cover_packages': None, 'cover_erase': None, 'cover_tests': None, 'cover_min_percentage': None, 'cover_inclusive': None, 'cover_html': None, 'cover_html_dir': 'cover', 'cover_branches': None, 'cover_xml': None, 'cover_xml_file': 'coverage.xml', 'debugBoth': False, 'debugFailures': False, 'debugErrors': False, 'noDeprecated': False, 'enable_plugin_doctest': None, 'doctest_tests': None, 'doctestExtension': None, 'doctest_result_var': None, 'doctestFixtures': None, 'doctestOptions': None, 'enable_plugin_isolation': None, 'detailedErrors': None, 'noSkip': False, 'enable_plugin_id': None, 'testIdFile': '.noseids', 'failed': False, 'multiprocess_workers': 0, 'multiprocess_timeout': 10, 'multiprocess_restartworker': False, 'enable_plugin_xunit': None, 'xunit_file': 'nosetests.xml', 'xunit_testsuite_name': 'nosetests', 'enable_plugin_allmodules': None, 'collect_only': True}>, parser=<optparse.OptionParser object at 0x104f1a128>, parserClass=<class 'optparse.OptionParser'>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x104a7c438>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, testMatch=re.compile('test'), testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=4, where=(), worker=False, workingDir='/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles')
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles
nose.importer: DEBUG: insert /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles into sys.path
nose.plugins.collect: DEBUG: Preparing test loader
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x1050c77f0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['.']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from . (None)
nose.selector: DEBUG: Test name . resolved to file ., module None, call None
nose.selector: DEBUG: Final resolution of test name .: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles module None call None
nose.plugins.collect: DEBUG: TestSuite([<nose.suite.LazySuite tests=generator (4391412344)>])
nose.plugins.collect: DEBUG: Add test <nose.suite.LazySuite tests=generator (4391412344)>
nose.core: DEBUG: runTests called
nose.suite: DEBUG: precache is []
nose.loader: DEBUG: load from dir /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/five.output? False
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/four.output? False
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/one.output? False
nose.selector: DEBUG: wantDirectory /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/specific? False
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/three.output? False
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/two.output? False
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py module test_root call None
nose.importer: DEBUG: Import test_root from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles
nose.importer: DEBUG: find module part test_root (test_root) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles']
nose.loader: DEBUG: Load from module <module 'test_root' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py'>
nose.selector: DEBUG: wantModule <module 'test_root' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/test_root.py'>? True
nose.selector: DEBUG: wantClass <class 'test_root.Test_Root_test1'>? True
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'test_root.Test_Root_test1'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'test_root.Test_Root_test1'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.test_Root_A>? True
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.test_Root_B>? True
nose.selector: DEBUG: wantMethod <unbound method Test_Root_test1.test_Root_c>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x105bfa8d0>)
nose.plugins.collect: DEBUG: Add test test_Root_A (test_root.Test_Root_test1)
nose.plugins.collect: DEBUG: Add test test_Root_B (test_root.Test_Root_test1)
nose.plugins.collect: DEBUG: Add test test_Root_c (test_root.Test_Root_test1)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x105bfa630>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<test_root.Test_Root_test1 testMethod=test_Root_A>), Test(<test_root.Test_Root_test1 testMethod=test_Root_B>), Test(<test_root.Test_Root_test1 testMethod=test_Root_c>)]>
nose.plugins.collect: DEBUG: Preparing test case test_Root_A (test_root.Test_Root_test1)
test_Root_A (test_root.Test_Root_test1) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_Root_B (test_root.Test_Root_test1)
test_Root_B (test_root.Test_Root_test1) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_Root_c (test_root.Test_Root_test1)
test_Root_c (test_root.Test_Root_test1) ... ok
nose.selector: DEBUG: wantDirectory /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests? True
nose.plugins.collect: DEBUG: TestSuite(<generator object TestLoader.loadTestsFromDir at 0x105bb68e0>)
nose.loader: DEBUG: load from dir /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: insert /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests into sys.path
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py module test4 call None
nose.importer: DEBUG: Import test4 from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: find module part test4 (test4) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests']
nose.loader: DEBUG: Load from module <module 'test4' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py'>
nose.selector: DEBUG: wantModule <module 'test4' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test4.py'>? True
nose.selector: DEBUG: wantClass <class 'test4.Test_test3'>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test3.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'test4.Test_test3'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'test4.Test_test3'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.test4A>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test3.test4B>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x105bfae10>)
nose.plugins.collect: DEBUG: Add test test4A (test4.Test_test3)
nose.plugins.collect: DEBUG: Add test test4B (test4.Test_test3)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x105bfac50>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<test4.Test_test3 testMethod=test4A>), Test(<test4.Test_test3 testMethod=test4B>)]>
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[<nose.plugins.collect.TestSuite tests=[Test(<test4.Test_test3 testMethod=test4A>), Test(<test4.Test_test3 testMethod=test4B>)]>]>
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py module test_unittest_one call None
nose.importer: DEBUG: Import test_unittest_one from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: find module part test_unittest_one (test_unittest_one) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests']
nose.loader: DEBUG: Load from module <module 'test_unittest_one' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py'>
nose.selector: DEBUG: wantModule <module 'test_unittest_one' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_one.py'>? True
nose.selector: DEBUG: wantClass <class 'test_unittest_one.Test_test1'>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test1.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'test_unittest_one.Test_test1'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'test_unittest_one.Test_test1'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test1.test_A>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test1.test_B>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test1.test_c>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x105c164e0>)
nose.plugins.collect: DEBUG: Add test test_A (test_unittest_one.Test_test1)
nose.plugins.collect: DEBUG: Add test test_B (test_unittest_one.Test_test1)
nose.plugins.collect: DEBUG: Add test test_c (test_unittest_one.Test_test1)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x105bfad30>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<test_unittest_one.Test_test1 testMethod=test_A>), Test(<test_unittest_one.Test_test1 testMethod=test_B>), Test(<test_unittest_one.Test_test1 testMethod=test_c>)]>
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[<nose.plugins.collect.TestSuite tests=[Test(<test_unittest_one.Test_test1 testMethod=test_A>), Test(<test_unittest_one.Test_test1 testMethod=test_B>), Test(<test_unittest_one.Test_test1 testMethod=test_c>)]>]>
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py module test_unittest_two call None
nose.importer: DEBUG: Import test_unittest_two from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: find module part test_unittest_two (test_unittest_two) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests']
nose.loader: DEBUG: Load from module <module 'test_unittest_two' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py'>
nose.selector: DEBUG: wantModule <module 'test_unittest_two' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/test_unittest_two.py'>? True
nose.selector: DEBUG: wantClass <class 'test_unittest_two.Test_test2'>? True
nose.selector: DEBUG: wantClass <class 'test_unittest_two.Test_test2a'>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test2.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'test_unittest_two.Test_test2'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'test_unittest_two.Test_test2'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2.test_A2>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test2.test_B2>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test2.test_C2>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test2.test_D2>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x105c16ba8>)
nose.plugins.collect: DEBUG: Add test test_A2 (test_unittest_two.Test_test2)
nose.plugins.collect: DEBUG: Add test test_B2 (test_unittest_two.Test_test2)
nose.plugins.collect: DEBUG: Add test test_C2 (test_unittest_two.Test_test2)
nose.plugins.collect: DEBUG: Add test test_D2 (test_unittest_two.Test_test2)
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'test_unittest_two.Test_test2a'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'test_unittest_two.Test_test2a'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.test_222A2>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test2a.test_222B2>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x105c16ba8>)
nose.plugins.collect: DEBUG: Add test test_222A2 (test_unittest_two.Test_test2a)
nose.plugins.collect: DEBUG: Add test test_222B2 (test_unittest_two.Test_test2a)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x105c16b38>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<test_unittest_two.Test_test2 testMethod=test_A2>), Test(<test_unittest_two.Test_test2 testMethod=test_B2>), Test(<test_unittest_two.Test_test2 testMethod=test_C2>), Test(<test_unittest_two.Test_test2 testMethod=test_D2>)]>
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<test_unittest_two.Test_test2a testMethod=test_222A2>), Test(<test_unittest_two.Test_test2a testMethod=test_222B2>)]>
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[<nose.plugins.collect.TestSuite tests=[Test(<test_unittest_two.Test_test2 testMethod=test_A2>), Test(<test_unittest_two.Test_test2 testMethod=test_B2>), Test(<test_unittest_two.Test_test2 testMethod=test_C2>), Test(<test_unittest_two.Test_test2 testMethod=test_D2>)]>, <nose.plugins.collect.TestSuite tests=[Test(<test_unittest_two.Test_test2a testMethod=test_222A2>), Test(<test_unittest_two.Test_test2a testMethod=test_222B2>)]>]>
nose.selector: DEBUG: wantFile /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py? True
nose.loader: DEBUG: load from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py (None)
nose.selector: DEBUG: Test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py resolved to file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py: file /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py module unittest_three_test call None
nose.importer: DEBUG: Import unittest_three_test from /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: Add path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.importer: DEBUG: find module part unittest_three_test (unittest_three_test) in ['/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests']
nose.loader: DEBUG: Load from module <module 'unittest_three_test' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py'>
nose.selector: DEBUG: wantModule <module 'unittest_three_test' from '/Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests/unittest_three_test.py'>? True
nose.selector: DEBUG: wantClass <class 'unittest_three_test.Test_test3'>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test3.addCleanup>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.addTypeEqualityFunc>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertCountEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertDictContainsSubset>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertDictEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertFalse>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertGreater>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertGreaterEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsNot>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertIsNotNone>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertLess>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertLessEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertListEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertLogs>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertMultiLineEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotAlmostEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotIn>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotIsInstance>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertNotRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertRaises>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertRaisesRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertSequenceEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertSetEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertTrue>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertTupleEqual>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertWarns>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.assertWarnsRegex>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.countTestCases>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.debug>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.defaultTestResult>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.doCleanups>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.fail>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.deprecated_func>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.id>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.run>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.setUp>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.setUpClass of <class 'unittest_three_test.Test_test3'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.shortDescription>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.skipTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.subTest>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.tearDown>? None
nose.selector: DEBUG: wantMethod <bound method TestCase.tearDownClass of <class 'unittest_three_test.Test_test3'>>? None
nose.selector: DEBUG: wantMethod <unbound method Test_test3.test_A>? True
nose.selector: DEBUG: wantMethod <unbound method Test_test3.test_B>? True
nose.plugins.collect: DEBUG: TestSuite(<map object at 0x105c21588>)
nose.plugins.collect: DEBUG: Add test test_A (unittest_three_test.Test_test3)
nose.plugins.collect: DEBUG: Add test test_B (unittest_three_test.Test_test3)
nose.plugins.collect: DEBUG: TestSuite(<nose.suite.ContextList object at 0x105c16ac8>)
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[Test(<unittest_three_test.Test_test3 testMethod=test_A>), Test(<unittest_three_test.Test_test3 testMethod=test_B>)]>
nose.plugins.collect: DEBUG: Add test <nose.plugins.collect.TestSuite tests=[<nose.plugins.collect.TestSuite tests=[Test(<unittest_three_test.Test_test3 testMethod=test_A>), Test(<unittest_three_test.Test_test3 testMethod=test_B>)]>]>
nose.importer: DEBUG: Remove path /Users/donjayamanne/.vscode/extensions/pythonVSCode/src/test/pythonFiles/testFiles/noseFiles/tests
nose.plugins.collect: DEBUG: Preparing test case test4A (test4.Test_test3)
test4A (test4.Test_test3) ... ok
nose.plugins.collect: DEBUG: Preparing test case test4B (test4.Test_test3)
test4B (test4.Test_test3) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_A (test_unittest_one.Test_test1)
test_A (test_unittest_one.Test_test1) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_B (test_unittest_one.Test_test1)
test_B (test_unittest_one.Test_test1) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_c (test_unittest_one.Test_test1)
test_c (test_unittest_one.Test_test1) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_A2 (test_unittest_two.Test_test2)
test_A2 (test_unittest_two.Test_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_B2 (test_unittest_two.Test_test2)
test_B2 (test_unittest_two.Test_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_C2 (test_unittest_two.Test_test2)
test_C2 (test_unittest_two.Test_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_D2 (test_unittest_two.Test_test2)
test_D2 (test_unittest_two.Test_test2) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_222A2 (test_unittest_two.Test_test2a)
test_222A2 (test_unittest_two.Test_test2a) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_222B2 (test_unittest_two.Test_test2a)
test_222B2 (test_unittest_two.Test_test2a) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_A (unittest_three_test.Test_test3)
test_A (unittest_three_test.Test_test3) ... ok
nose.plugins.collect: DEBUG: Preparing test case test_B (unittest_three_test.Test_test3)
test_B (unittest_three_test.Test_test3) ... ok
nose.suite: DEBUG: precache is []

----------------------------------------------------------------------
Ran 16 tests in 0.048s

OK
